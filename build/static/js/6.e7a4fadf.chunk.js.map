{"version":3,"sources":["components/Order/Orders.module.css","components/Order/Order.js","container/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","style","textTransform","border","display","margin","padding","key","className","Classes","Order","Number","parseFloat","price","toFixed","Orders","this","fetchDatainit","token","userId","loading","data","id","ingredient","Component","connect","state","orders","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,MAAQ,wB,yHC+BXC,EA9BD,SAAAC,GACV,IAAMC,EAAa,GAEnB,IAAI,IAAIC,KAAkBF,EAAMC,YAC5BA,EAAYE,KAAK,CACbC,KAAMF,EACNG,OAAOL,EAAMC,YAAYC,KAGjC,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACrC,OACI,0BAAMC,MAAO,CACTC,cAAc,aACdC,OAAO,iBACPC,QAAQ,eACRC,OAAO,QACPC,QAAS,OAEbC,IAAKP,EAAGJ,MAAOI,EAAGJ,KAPlB,KAO0BI,EAAGH,OAP7B,QAUR,OACI,yBAAKW,UAAWC,IAAQC,OACpB,4CAAkBZ,GAClB,oCAAS,wCAAca,OAAOC,WAAWpB,EAAMqB,OAAOC,QAAQ,O,gCClBpEC,E,4LAGEC,KAAKxB,MAAMyB,cAAcD,KAAKxB,MAAM0B,MAAOF,KAAKxB,MAAM2B,U,+BAGtD,IAAI5B,EAAQ,kBAAC,IAAD,MAOZ,OANIyB,KAAKxB,MAAM4B,UACX7B,EAAQyB,KAAKxB,MAAMD,MAAMQ,KAAI,SAAAsB,GAAI,OAC7B,kBAACX,EAAD,CAAOH,IAAKc,EAAKC,GACjB7B,YAAc4B,EAAKE,WACnBV,MAAOQ,EAAKR,YAGhB,6BACKtB,O,GAfIiC,aAkCNC,uBAbS,SAAAC,GACpB,MAAM,CACFnC,MAAOmC,EAAMnC,MAAMoC,OACnBP,QAASM,EAAMnC,MAAM6B,QACrBF,MAAOQ,EAAME,KAAKV,MAClBC,OAAQO,EAAME,KAAKT,WAGA,SAAAU,GACvB,MAAM,CACFZ,cAAgB,SAACC,EAAOC,GAAR,OAAkBU,EAASC,IAAmBZ,EAAOC,QAG9DM,CAA6CM,YAAiBhB,EAAQiB","file":"static/js/6.e7a4fadf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Orders_Order__Eh39y\"};","import React from 'react';\r\nimport Classes from './Orders.module.css';\r\nconst order = props =>{\r\n    const ingredients =[];\r\n    // eslint-disable-next-line no-unused-vars\r\n    for(let ingredientName in props.ingredients){\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            amount:props.ingredients[ingredientName]\r\n         })\r\n    }\r\n    const ingredientOutput = ingredients.map(ig =>{\r\n        return (\r\n            <span style={{\r\n                textTransform:'capitalize',\r\n                border:'1px solid #ccc',\r\n                display:'inline-block',\r\n                margin:'0 8px',\r\n                padding: '5px'\r\n            }}\r\n            key={ig.name}>{ig.name} ({ig.amount})</span>\r\n        )\r\n    })\r\n    return(\r\n        <div className={Classes.Order}>\r\n            <p>Ingredients : {ingredientOutput}</p>\r\n            <p>Price <strong>USD: {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Order from '../../components/Order/Order';\r\nimport axios from '../../axios';\r\nimport withErrorHandler from '../../hoc/withErrHandler/withErrHandler';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/spinner';\r\n\r\nclass Orders extends Component {\r\n    \r\n    componentDidMount(){\r\n        this.props.fetchDatainit(this.props.token, this.props.userId);\r\n    }\r\n    render(){\r\n        let order = <Spinner />;\r\n        if(!this.props.loading){\r\n            order = this.props.order.map(data =>(\r\n                <Order key={data.id}\r\n                ingredients ={data.ingredient}\r\n                price={data.price}/>))\r\n        }\r\n        return(\r\n            <div>\r\n                {order}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapToStateProps = state => {\r\n    return{\r\n        order: state.order.orders,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\nconst mapToStateDispatch = dispatch => {\r\n    return{\r\n        fetchDatainit : (token, userId)=> dispatch(actions.fetchOrder(token, userId))\r\n    };\r\n};\r\nexport default connect(mapToStateProps, mapToStateDispatch)(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}